// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQLProject.Migrations
{
    [DbContext(typeof(GraphQLDbContext))]
    partial class GraphQLDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphQLProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "massas.jpg",
                            Name = "Massas"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "carnes.jpg",
                            Name = "Carnes"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "saladas.jpg",
                            Name = "Saladas"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "peixes.jpg",
                            Name = "Peixes"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "sobremesas.jpg",
                            Name = "Sobremesas"
                        });
                });

            modelBuilder.Entity("GraphQLProject.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Pizza tradicional com molho de tomate, mussarela e manjericão fresco",
                            Name = "Pizza Margherita",
                            Price = 45.899999999999999
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Lasanha tradicional com molho bolonhesa, bechamel e queijo gratinado",
                            Name = "Lasanha Bolonhesa",
                            Price = 38.75
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Corte especial de bife ancho grelhado, acompanhado de batatas rústicas e molho chimichurri",
                            Name = "Bife Ancho Grelhado",
                            Price = 59.899999999999999
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            Description = "Alface romana, croutons, parmesão e molho caesar tradicional",
                            Name = "Salada Caesar",
                            Price = 28.899999999999999
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Filé de salmão grelhado com legumes salteados e molho de ervas",
                            Name = "Salmão Grelhado",
                            Price = 65.0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Sobremesa italiana com café, mascarpone e cacau em pó",
                            Name = "Tiramisù",
                            Price = 18.899999999999999
                        });
                });

            modelBuilder.Entity("GraphQLProject.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialRequest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "João Silva",
                            Email = "joao.silva@email.com",
                            PartySize = 2,
                            PhoneNumber = "11999999999",
                            ReservationDate = new DateTime(2025, 8, 30, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            SpecialRequest = "Mesa próxima à janela"
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "Maria Oliveira",
                            Email = "maria.oliveira@email.com",
                            PartySize = 4,
                            PhoneNumber = "11988888888",
                            ReservationDate = new DateTime(2025, 8, 31, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            SpecialRequest = "Cadeira para criança"
                        });
                });

            modelBuilder.Entity("GraphQLProject.Models.Menu", b =>
                {
                    b.HasOne("GraphQLProject.Models.Category", null)
                        .WithMany("Menus")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GraphQLProject.Models.Category", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
